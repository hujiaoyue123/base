<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boxin.base.dao.ManageUserMapper">
  <resultMap id="BaseResultMap" type="com.boxin.base.model.ManageUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="modify_time" jdbcType="TIMESTAMP" property="modifyTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, name, real_name, password, type, phone, email, status, create_time, modify_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from base_manage_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from base_manage_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.boxin.base.model.ManageUser" useGeneratedKeys="true" keyProperty="id">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into base_manage_user (id, name, real_name, 
      password, type, phone, 
      email, status, create_time, 
      modify_time)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, now(), now())
  </insert>
  <insert id="insertSelective" parameterType="com.boxin.base.model.ManageUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into base_manage_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="modifyTime != null">
        modify_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.boxin.base.model.ManageUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_manage_user
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="modifyTime != null">
        modify_time = #{modifyTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.boxin.base.model.ManageUser">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update base_manage_user
    set name = #{name,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      type = #{type,jdbcType=TINYINT},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      modify_time = #{modifyTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
    <!-- expand sql -->
  <select id="findByName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from base_manage_user
    where name = #{name,jdbcType=VARCHAR}
  </select>

  <update id="updatePwd" parameterType="java.lang.String">
    update base_manage_user set password = #{newPwd} where password = #{oldPwd} and name = #{userName}
  </update>
  <update id="updatePassWord" parameterType="java.lang.String">
    update base_manage_user set password = #{newPwd} where name = #{userName}
  </update>

  <select id="findAllUsers" resultMap="BaseResultMap" >
    <bind name="rName" value="'%' + realName + '%'" />
    <bind name="uName" value="'%' + userName + '%'" />
    select
    <include refid="Base_Column_List" />
    from base_manage_user emu
    <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        and emu.name like #{uName}
      </if>
      <if test="realName != null and realName != ''">
        and emu.real_name like #{rName}
      </if>
      <if test="roleId != null and roleId != '' ">
        and emu.id in (select emur.user_id from base_manage_user_role emur
        where emur.role_id in(#{roleId,jdbcType=VARCHAR}))
      </if>
    </trim>
    limit #{page},#{limitSize}
  </select>

  <update id="insertUserRoleRelevance" parameterType="java.lang.Integer" >
    insert into  base_manage_user_role (user_id,role_id,create_time) value(#{uId},#{rId},now());
  </update>

  <select id="findRolesByUserId" resultType="java.lang.Integer" parameterType="java.lang.Integer">
    select role_id from base_manage_user_role where user_id = #{uid}
  </select>

  <delete id="deleteUserRoleRelevance" parameterType="java.lang.Integer" >
    delete from base_manage_user_role where user_id = #{id}
  </delete>

  <select id="findAllUserSize" resultType="java.lang.Integer" >
    <bind name="rName" value="'%' + realName + '%'" />
    <bind name="uName" value="'%' + userName + '%'" />
    select count(emu.id) from base_manage_user emu
    <trim prefix="WHERE" prefixOverrides="AND|OR" suffixOverrides=",">
      <if test="userName != null and userName != ''">
        and emu.name like #{uName}
      </if>
      <if test="realName != null and realName != ''">
        and emu.real_name like #{rName}
      </if>
      <if test="roleId != null and roleId != '' ">
        and emu.id in (select emur.user_id from base_manage_user_role emur
        where emur.role_id in(#{roleId,jdbcType=VARCHAR}))
      </if>
    </trim>
  </select>
	<!-- 删除用户 -->
	<update id="removeUser" parameterType="int">
		update base_manage_user set status = 0 where id = #{id}
	</update>

  <insert id="quartzTest" parameterType="com.boxin.base.model.ManageUser">
  	insert into base_manage_user (name,password,create_time) values(#{name},#{password},now())
  </insert>
  
  <update id="updateUserFp" parameterType="com.boxin.base.model.ManageUser">
  	UPDATE base_manage_user SET email = #{email}, name = #{name} ,phone = #{phone} ,real_name = #{realName},modify_time = now() WHERE id = #{id}
  </update>

  
</mapper>